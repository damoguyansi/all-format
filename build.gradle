buildscript {
    repositories {
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.15'
}

group 'com.damoguyansi'
version '1.1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.alibaba', name: 'druid', version: '1.1.23'
    compile group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '3.1.1'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.73'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.google.zxing', name: 'core', version: '3.4.0'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

intellij {
    version 'IC-2019.3'
    pluginName 'com.damoguyansi.all-format'
    updateSinceUntilBuild false
}

//-----------------------------------change xml file encoding---------------------------------------------
project.patchPluginXml.doLast {
    loopFileDirectoryChangeFileEncoding((File) project.patchPluginXml.getDestinationDir())
}

void loopFileDirectoryChangeFileEncoding(File xmlFileDirectory) {
    if (xmlFileDirectory != null && xmlFileDirectory.isDirectory()) {
        File[] files = xmlFileDirectory.listFiles()
        for (File tempXmlFile : files) {
            if (tempXmlFile.isFile()) {
                String xmlPath = tempXmlFile.getPath()
                project.changeFileEncodingToUtf8(xmlPath)
            }
        }
    }
}

void changeFileEncodingToUtf8(String xmlPath) {
    System.out.println("change..." + xmlPath);
    try {
        BufferedReader bfr = new BufferedReader(new FileReader(xmlPath))
        String line = bfr.readLine()
        StringBuilder sb = new StringBuilder()
        while (line != null) {
            sb.append(line)
            sb.append("\n")
            line = bfr.readLine()
        }
        bfr.close()
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(xmlPath, false), "GBK"))
        writer.write(sb.toString())
        writer.flush()
        writer.close()
    } catch (IOException e) {
        System.out.println("read errï¼š" + e.toString())
    }
}